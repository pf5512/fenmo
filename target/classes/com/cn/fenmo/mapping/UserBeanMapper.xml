<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.fenmo.dao.UserBeanMapper" >
  <resultMap id="BaseResultMap" type="com.cn.fenmo.pojo.UserBean" >
    <id column="mainId" property="mainid" jdbcType="BIGINT" />
    <result column="fmNo" property="fmNo" jdbcType="VARCHAR" />
    <result column="userName" property="username" jdbcType="VARCHAR" />
    <result column="passWord" property="password" jdbcType="VARCHAR" />
    <result column="imgUrls" property="imgUrls" jdbcType="VARCHAR" />
    <result column="specificSign" property="specificsign" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="DECIMAL" />
    <result column="constellation" property="constellation" jdbcType="VARCHAR" />
    <result column="hxId" property="hxid" jdbcType="VARCHAR" />
    <result column="circle" property="circle" jdbcType="INTEGER" />
    <result column="idol" property="idol" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="token" property="token" jdbcType="VARCHAR" />
    <result column="headImgPath" property="headImgPath" jdbcType="VARCHAR" />
    <result column="nationality" property="nationality" jdbcType="VARCHAR" />
    <result column="occupation" property="occupation" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="lat" property="lat" jdbcType="DOUBLE" />
    <result column="lng" property="lng" jdbcType="DOUBLE" />
    <result column="starLevel" property="starLevel" jdbcType="INTEGER" />
    <result column="registerTime" property="registerTime" jdbcType="TIMESTAMP" />
  </resultMap>
   <sql id="Base_Column_List" >
     mainId, userName, passWord, imgUrls, specificSign, age, sex, phone, constellation,hxId,fmNo,
     circle, idol,nickname,token,nationality,occupation,birthday,headImgPath,lat,lng,starLevel,registerTime
   </sql>
   <insert id="insert" parameterType="com.cn.fenmo.pojo.UserBean" >
      insert into fm_user (mainId,fmNo, userName, passWord,specificSign, age, sex, phone, constellation, 
      circle, idol,nickname,token,nationality,occupation,birthday,starLevel,registerTime)
      values (#{mainid,jdbcType=BIGINT},#{fmNo,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{specificsign,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{sex,jdbcType=INTEGER}, #{phone,jdbcType=DECIMAL}, #{constellation,jdbcType=VARCHAR}, 
      #{circle,jdbcType=INTEGER}, #{idol,jdbcType=VARCHAR},#{nickname,jdbcType=VARCHAR},
      #{token,jdbcType=VARCHAR},#{nationality,jdbcType=VARCHAR},#{occupation,jdbcType=VARCHAR},#{birthday,jdbcType=DATE}
     ,#{starLevel,jdbcType=DATE},#{registerTime,jdbcType=DATE})
  </insert>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from fm_user
    where mainId = #{mainid,jdbcType=BIGINT}
  </select>
  
  <select id="selectUsersByStarLevel" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from fm_user
    where (starLevel > #{starLevel,jdbcType=INTEGER} or starLevel =#{starLevel,jdbcType=INTEGER})
    ORDER BY starLevel DESC,registerTime DESC
    limit 0,20
  </select>
  
  <select id="selectMyFriendCount" resultType="Integer" parameterType="java.util.Map" >
    SELECT
       count(*)
    FROM
	(
		SELECT
			*
		FROM
			fm_user
		WHERE
			phone IN (
				SELECT
					userPhone
				FROM
					fm_friend
				WHERE
					friendPhone = #{userPhone,jdbcType=BIGINT} and state = #{state,jdbcType=INTEGER}
			)
		UNION
			SELECT
				*
			FROM
				fm_user
			WHERE
				phone IN (
					SELECT
						friendPhone
					FROM
						fm_friend
					WHERE
						userPhone = #{userPhone,jdbcType=BIGINT} and state = #{state,jdbcType=INTEGER}
				)
	) as u
  </select>
  
  <select id="selectMyFriend" resultMap="BaseResultMap" parameterType="java.util.Map" >
    SELECT
        <include refid="Base_Column_List" />
    FROM
	(
		SELECT
			*
		FROM
			fm_user
		WHERE
			phone IN (
				SELECT
					userPhone
				FROM
					fm_friend
				WHERE
					friendPhone = #{userPhone,jdbcType=BIGINT} and state = #{state,jdbcType=INTEGER}
			)
		UNION
			SELECT
				*
			FROM
				fm_user
			WHERE
				phone IN (
					SELECT
						friendPhone
					FROM
						fm_friend
					WHERE
						userPhone = #{userPhone,jdbcType=BIGINT} and state = #{state,jdbcType=INTEGER}
				)
	) as u
    ORDER BY starLevel DESC,registerTime DESC
    LIMIT #{start,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
  </select>
  
  <select id="selectMyFriendRequest" resultMap="BaseResultMap" parameterType="java.util.Map" >
    SELECT
        <include refid="Base_Column_List" />
    FROM
	(
		SELECT
			*
		FROM
			fm_user
		WHERE
			phone IN (
				SELECT
					userPhone
				FROM
					fm_friend
				WHERE
					friendPhone = #{userPhone,jdbcType=BIGINT} and state = #{state,jdbcType=INTEGER}
			)
		
	) as u
    ORDER BY starLevel DESC,registerTime DESC
  </select>
  
   <select id="selectMembers" resultMap="BaseResultMap" parameterType="java.util.Map" >
	    select <include refid="Base_Column_List" />
	    from fm_user
	    where userName in (select userName  from fm_room_users where groupId =#{groupId,jdbcType=VARCHAR})
  </select>
  
   <select id="selectMyFriendCountBy" resultType="Integer" parameterType="java.util.Map" >
     select count(*)
     from fm_user
     where phone in (select friendPhone  from fm_friend  where userPhone =#{userPhone,jdbcType=BIGINT} and state = #{state,jdbcType=INTEGER})
     and (nickName like '${searchKey}%'  or userName like '${searchKey}%' or fmNo like '${searchKey}%')
   </select>
   
   <select id="selectMyFriendBy" resultMap="BaseResultMap" parameterType="java.util.Map" >
	    SELECT
        <include refid="Base_Column_List" />
	    FROM
		(
			SELECT
				*
			FROM
				fm_user
			WHERE
				phone IN (
					SELECT
						userPhone
					FROM
						fm_friend
					WHERE
						friendPhone = #{userPhone,jdbcType=BIGINT} and state = #{state,jdbcType=INTEGER}
				)
			UNION
				SELECT
					*
				FROM
					fm_user
				WHERE
					phone IN (
						SELECT
							friendPhone
						FROM
							fm_friend
						WHERE
							userPhone = #{userPhone,jdbcType=BIGINT} and state = #{state,jdbcType=INTEGER}
					)
		) as u
        where 1=1 and  (nickName like '${searchKey}%'  or userName like '${searchKey}%' or fmNo like '${searchKey}%')
        ORDER BY starLevel DESC,registerTime DESC
	    LIMIT #{start,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
  </select>
  
  <select id="selectByPhone" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from fm_user
    where phone = #{phone,jdbcType=VARCHAR}
  </select>
  
   <select id="selectByToken" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from fm_user
    where token = #{token,jdbcType=VARCHAR}
  </select>
  
  <select id="selectByFmNo" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from fm_user
    where fmNo = #{fmNo,jdbcType=VARCHAR}
  </select>
  
  <select id="selectCount" resultType="Integer" parameterType="java.util.Map">
      select count(*)
      from fm_user
      where  1=1
      <if test="searchKey!= null" >
         and (phone like '${searchKey}%' or nickName like '${searchKey}%' or fmNo like '${searchKey}%'  )
      </if>
      <if test="age==2">
         and age <![CDATA[<=]]>20 
      </if>
      <if test="age==3">
         and age BETWEEN 20 AND 30
      </if>
      <if test="age==4">
         and age <![CDATA[>=]]>30 
      </if>
      <if test="sex!=null" >
         and sex = #{sex,jdbcType=VARCHAR}
      </if> 
  </select>
  
   <select id="selectPageBy" resultMap="BaseResultMap" parameterType="java.util.Map">
	    select 
	    <include refid="Base_Column_List" />
	    from fm_user
	    where 1=1
	    <if test="searchKey!= null" >
           and (phone like '%${searchKey}%' or nickName like '%${searchKey}%' or fmNo like '%${searchKey}%')
        </if>
	    <if test="age==2">
           and age <![CDATA[<=]]>20 
        </if>
        <if test="age==3">
           and age BETWEEN 20 AND 30
        </if>
        <if test="age==4">
           and age <![CDATA[>=]]>30 
        </if>
        <if test="sex!=null" >
           and sex = #{sex,jdbcType=VARCHAR}
        </if>   
        ORDER BY starLevel DESC,registerTime DESC
	    LIMIT #{start,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
   </select>
   
   <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
     delete from fm_user
     where mainId = #{mainid,jdbcType=BIGINT}
   </delete>

  
  <update id="update" parameterType="com.cn.fenmo.pojo.UserBean" >
     update fm_user
     <set>
      <if test="headImgPath != null" >
        headImgPath = #{headImgPath,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        passWord = #{password,jdbcType=VARCHAR},
      </if>
      <if test="imgUrls != null" >
        imgUrls = #{imgUrls,jdbcType=VARCHAR},
      </if>
      <if test="specificsign != null" >
        specificSign = #{specificsign,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=DECIMAL},
      </if>
      <if test="constellation != null" >
        constellation = #{constellation,jdbcType=VARCHAR},
      </if>
      <if test="hxid != null" >
        hxId = #{hxid,jdbcType=VARCHAR},
      </if>
      <if test="circle != null" >
        circle = #{circle,jdbcType=INTEGER},
      </if>
      <if test="idol != null" >
        idol = #{idol,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        token = #{token,jdbcType=VARCHAR},
      </if>
       <if test="nationality != null" >
        nationality = #{nationality,jdbcType=VARCHAR},
      </if>
       <if test="occupation != null" >
        occupation = #{occupation,jdbcType=VARCHAR},
       </if>
       <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
       </if>
       <if test="lat != null" >
        lat = #{lat,jdbcType=DOUBLE},
       </if>
       <if test="lng != null" >
        lng = #{lng,jdbcType=DOUBLE}
       </if>
    </set>
    where mainId = #{mainid,jdbcType=BIGINT}
  </update>
  <select id="selectUserList" resultType="com.cn.fenmo.pojo.UserBean" parameterType="java.util.List">
        select *
        from fm_user e
        where e.userName in
        <foreach collection="list" item="userId" index="index"
            open="(" close=")" separator=",">
            #{userId}
        </foreach>
   </select>
   <select id="selectUserByUserPhoneList" resultType="com.cn.fenmo.pojo.UserBean" parameterType="java.util.List">
        select e.mainId,e.nickName,e.userName
        from fm_user e
        where e.userName in
        <foreach collection="list" item="userPhone" index="index"
            open="(" close=")" separator=",">
            #{userPhone}
        </foreach>
    </select>
    <select id="selectNearList" resultMap="BaseResultMap" parameterType="java.util.Map">
		 <![CDATA[ 
		select t.* from (
		select s.*, sqrt((lng-${lng})*3.14*6371229*cos(((lat+${lat})/2)*3.14/180)/180*(lng-${lng})*3.14*6371229*cos(((lat+${lat})/2)*3.14/180)/180
				+(lat-${lat})*3.14*6371229/180*(lat-${lat})*3.14*6371229/180) as juli from fm_user as s 
		) t
		where t.juli<10000 and lat!=${lat} and lng!=${lat}
	    ]]> 
	    <if test="sex != null" >
         and sex = #{sex}
        </if>
        <![CDATA[ 
		order by t.juli 
		limit #{start},#{limit}
		]]> 
    </select>
    <update id="updateLocation" parameterType="java.util.Map">
       update fm_user
       set lat = #{lat},lng = #{lng}
       where phone = #{userPhone}
    </update>
</mapper>
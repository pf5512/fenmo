<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.fenmo.dao.NewsMapper" >
  <resultMap id="BaseResultMap" type="com.cn.fenmo.pojo.News" >
    <id column="mainid" property="mainid" jdbcType="BIGINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="newSrc" property="newsrc" jdbcType="VARCHAR" />
    <result column="newsType" property="newstype" jdbcType="INTEGER" />
    <result column="summary" property="summary" jdbcType="VARCHAR" />
    <result column="userName" property="userName" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="createDate" property="createdate" jdbcType="TIMESTAMP" />
    <result column="zcount" property="zcount" jdbcType="INTEGER" />
    <result column="newsHttpUrl" property="newsHttpUrl" jdbcType="VARCHAR" />
    <result column="newHeadImgUrl" property="newHeadImgUrl" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List">
     mainid, title, newSrc, newsType, summary, userName, createDate,state,content,zcount,newHeadImgUrl,newsHttpUrl
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    SELECT p.*
    FROM fm_news p
    where mainId = #{mainId,jdbcType=BIGINT}
  </select>
  
    
  <select id="selectByUniqueKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    SELECT p.*
    FROM fm_news p
    WHERE newsHttpUrl = #{newsHttpUrl,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
     delete from fm_news
     where mainId = #{mainId,jdbcType=BIGINT}
  </delete>
  
  <insert id="insert" parameterType="com.cn.fenmo.pojo.News" >
      insert into fm_news (mainid, title, newSrc,newsType,summary, userName,state,createDate,content,zcount,newHeadImgUrl,newsHttpUrl)
      values (#{mainid,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{newsrc,jdbcType=VARCHAR}, 
      #{newstype,jdbcType=INTEGER},#{summary,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR},
       #{state,jdbcType=INTEGER}, #{createdate,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=VARCHAR}, #{zcount,jdbcType=INTEGER},#{newHeadImgUrl,jdbcType=VARCHAR},#{newsHttpUrl,jdbcType=VARCHAR})
  </insert>
  
   <!--查询新闻总数 -->
   <select id="selectCount" resultType="Integer" parameterType="java.util.Map">
	    select count(*)
	    from fm_news
	    <where>
		      <if test="userName != null" >
		        userName = #{userName,jdbcType=VARCHAR}
		      </if>
		      <if test="state != null" >
		        and state = #{state,jdbcType=INTEGER}
		      </if>
		      <if test="title != null" >
		        and title like '%${title}%'
		      </if>
		      <if test="newsType != null" >
		        and newsType = #{newsType,jdbcType=INTEGER}
		      </if>
	     </where>
   </select>
  
  <!-- 分页查询新闻 -->
   <select id="selectPageBy" resultMap="BaseResultMap" parameterType="java.util.Map">
	     select A.* from fm_news A
	     <where>
		      <if test="userName != null" >
		        A.userName = #{userName,jdbcType=VARCHAR}
		      </if>
		      <if test="state != null" >
		        and A.state = #{state,jdbcType=INTEGER}
		      </if>
		      <if test="title != null" >
		        and A.title like '%${title}%'
		      </if>
		      <if test="newsType != null" >
		        and A.newsType = #{newsType,jdbcType=INTEGER}
		      </if>
	     </where>
	     ORDER BY A.createDate desc
     	<if test="start!=null and limit !=null">
     		LIMIT #{start,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
     	</if>
     	<if test="page!=null and rows !=null">
     		LIMIT #{page,jdbcType=INTEGER},#{rows,jdbcType=INTEGER}
     	</if>
   </select>
   
    <!-- 获取相关新闻 -->
   <select id="selectInterfixNews" resultMap="BaseResultMap" parameterType="java.util.Map">
	     SELECT * From fm_news
	     WHERE newsType = #{newsType,jdbcType=INTEGER}
	     AND state=#{state,jdbcType=INTEGER}
	     ORDER BY createDate desc
	     LIMIT #{start,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
   </select>
   
   <select id="selectNewsHeadPage" resultMap="BaseResultMap" parameterType="java.util.Map">
	     SELECT * FROM  fm_news 
	     WHERE STATE = #{state,jdbcType=INTEGER}
	     ORDER BY createDate DESC 
	     LIMIT #{start,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
   </select>
   
   <update id="update" parameterType="com.cn.fenmo.pojo.News" >
        update fm_news
	     <set>
		      <if test="title != null" >
		        title = #{title,jdbcType=VARCHAR},
		      </if>
		      <if test="newsrc != null" >
		        newSrc = #{newsrc,jdbcType=VARCHAR},
		      </if>
		      <if test="newstype != null" >
		        newstype = #{newstype,jdbcType=VARCHAR},
		      </if>
		      <if test="newstype != null" >
		        newstype = #{newstype,jdbcType=VARCHAR},
		      </if>
		      <if test="content != null" >
		        content = #{content,jdbcType=VARCHAR},
		      </if>
		      <if test="summary != null" >
		        summary = #{summary,jdbcType=VARCHAR},
		      </if>
	     </set>
        where mainId = #{mainid,jdbcType=BIGINT}
  </update>
  
  <update id="publishNews" parameterType="java.util.Map" >
     update fm_news
    <set>
      <if test="isPublish!= null" >
        state = #{state,jdbcType=INTEGER}
      </if>
    </set>
     where mainId = #{mainId,jdbcType=BIGINT}
  </update>
  
  <update id="updateZCount" parameterType="java.util.Map" >
     update fm_news
    <set>
        zcount = #{zcount,jdbcType=INTEGER}
    </set>
     where mainId = #{mainId,jdbcType=BIGINT}
  </update>
  <!-- 批量插入从百度搜索出来的新闻,无效暂时不用 -->
   <insert  id="insertBatchRecord"  parameterType="java.util.List">  
      insert into fm_news (mainid,title,newSrc,newsHttpUrl,startDate,userName,createDate) values
      <foreach collection="list" item="item" index="index" separator=",">  
        (#{item.mainid},#{item.title},#{item.newSrc},#{item.newsHttpUrl},#{item.startDate},#{item.userName},#{item.createDate})  
      </foreach>  
      <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="mainid">  
            select LAST_INSERT_ID();  
       </selectKey>   
   </insert> 
</mapper>

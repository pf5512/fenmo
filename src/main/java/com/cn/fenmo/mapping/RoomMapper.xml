<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cn.fenmo.dao.RoomMapper">
  <resultMap id="BaseResultMap" type="com.cn.fenmo.pojo.Room">
    <id column="mainId" jdbcType="BIGINT" property="mainid" />
    <result column="userName" jdbcType="VARCHAR" property="userName" />
    <result column="roomName" jdbcType="VARCHAR" property="roomName" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="subject" jdbcType="VARCHAR" property="subject" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="ispublic" jdbcType="INTEGER" property="ispublic" />
    <result column="maxUsers" jdbcType="INTEGER" property="maxusers" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createdate" />
    <result column="headImgePath" jdbcType="VARCHAR" property="headImgePath" />
    <result column="groupId" jdbcType="BIGINT" property="groupId" />
    <result column="userCounts" jdbcType="INTEGER" property="userCounts" />
    <result column="membersonly" jdbcType="INTEGER" property="membersonly" />
  </resultMap>
  <sql id="Base_Column_List" >
    mainId,userName,roomName,description,subject,type,ispublic,maxUsers,createDate,headImgePath,groupId,userCounts,membersonly
  </sql>
  
  <select id="selectRoomMaxUsers" parameterType="java.lang.String" resultMap="BaseResultMap">
    select a.*,max(a.userCounts)
    from fm_room a
    where a.userName = #{userName,jdbcType=VARCHAR}
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from fm_room
    where mainId = #{mainid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from fm_room
    where mainId = #{mainid,jdbcType=BIGINT}
  </delete>
  
  <delete id="deleteByGroupId" parameterType="java.lang.String">
    delete from fm_room
    where groupId = #{groupId,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="com.cn.fenmo.pojo.Room">
    insert into fm_room (mainId, userName, roomName,description,subject, type, ispublic,maxUsers, createDate,groupId, userCounts,membersonly,headImgePath)
    values (#{mainid,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{roomName,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{subject,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{ispublic,jdbcType=INTEGER}, 
      #{maxusers,jdbcType=INTEGER}, #{createdate,jdbcType=DATE},  
      #{groupId,jdbcType=VARCHAR}, #{userCounts,jdbcType=INTEGER}, 
      #{membersonly,jdbcType=INTEGER},#{headImgePath,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.cn.fenmo.pojo.Room">
    update fm_room
    set userName = #{userName,jdbcType=VARCHAR},
      roomName = #{roomName,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      subject = #{subject,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      ispublic = #{ispublic,jdbcType=INTEGER},
      maxUsers = #{maxusers,jdbcType=INTEGER},
      createDate = #{createdate,jdbcType=DATE},
      headImgePath = #{headImgePath,jdbcType=VARCHAR},
      groupId = #{groupId,jdbcType=VARCHAR},
      userCounts = #{userCounts,jdbcType=INTEGER},
      membersonly = #{membersonly,jdbcType=INTEGER}
      where mainId = #{mainid,jdbcType=BIGINT}
  </update>
  <select id="selectCount" resultType="Integer">
	    select count(*)
	    from fm_room
	    where 1=1
	    <if test="roomName!=null" >
           and roomName like CONCAT('%','${roomName}','%')  
        </if>
        <if test="type!=null" >
           and type= #{type,jdbcType=INTEGER}
        </if>
        <if test="userName!=null" >
           and userName= #{userName,jdbcType=VARCHAR}
        </if>
        <if test="ispublic!=null" >
           and ispublic= #{ispublic,jdbcType=INTEGER}
        </if>
  </select>
  <!--  * 根据群组名称搜索出来的群组，无需登陆
  * 根据群组类型(娱乐，财经，房地产，自媒体)获取群组,无需登陆 -->
  <select id="selectPageBy" resultMap="BaseResultMap" parameterType="java.util.Map">
	    select <include refid="Base_Column_List" />
	    from fm_room 
	    where 1=1
	    <if test="roomName!=null" >
           and roomName like CONCAT('%','${roomName}','%')  
        </if>
        <if test="type!=null" >
           and type= #{type,jdbcType=INTEGER}
        </if>
        <if test="userName!=null" >
           and userName= #{userName,jdbcType=VARCHAR}
        </if>
        <if test="ispublic!=null" >
           and ispublic= #{ispublic,jdbcType=INTEGER}
        </if>
	    order by createDate desc
	    LIMIT #{start,jdbcType=VARCHAR},#{limit,jdbcType=VARCHAR}
   </select>
   <!-- isPublic=1 表示公有群 -->
   <select id="selectByName" resultMap="BaseResultMap" parameterType="java.lang.String">
	    select <include refid="Base_Column_List" />
	    from fm_room
	    where roomName = #{0} and isPublic=1
   </select>
   
   <select id="selectByGroupId" resultMap="BaseResultMap" parameterType="java.lang.String">
	    select 
	    <include refid="Base_Column_List" />
	    from fm_room
	    where groupId = #{groupId,jdbcType=VARCHAR}
   </select>
   <select id="selectHotRooms" resultMap="BaseResultMap">
	   select  <include refid="Base_Column_List" />
	   from fm_room a
       where a.userCounts in (select max(b.userCounts) from fm_room b )
   </select>
</mapper>